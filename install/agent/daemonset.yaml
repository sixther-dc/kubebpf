apiVersion: v1
kind: Namespace
metadata:
    name: ${NAMESPACE}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: agent-config
  namespace: ${NAMESPACE}
data:
  INFLUX_ADDR: ${INFLUX_ADDR}
  INFLUX_ORG: ${INFLUX_ORG}
  INFLUX_BUCKET: ${INFLUX_BUCKET}
  INFLUX_TOKEN: ${INFLUX_TOKEN}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app: agent
  name: agent
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: agent
  template:
    metadata:
      labels:
        app: agent
    spec:
      serviceAccountName: kubebpf
      containers:
      - env:
        - name: IN_CLUSTER
          value: "true"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        envFrom:
        - configMapRef:
            name: agent-config
        image: registry.erda.cloud/retag/kubebpf-agent:0.1
        imagePullPolicy: Always
        command:
        - /main
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep main || exit 1
          failureThreshold: 9
          initialDelaySeconds: 1
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 10
        name: agent
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - ps aux | grep main || exit 1
          failureThreshold: 12
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 10Mi
        securityContext:
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 5
    type: RollingUpdate